# Generated by Django 2.1.3 on 2018-12-04 16:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('first_state', 'first_state'), ('second_state', 'second_state'), ('stety', 'niestety')], default='first_state', max_length=20, verbose_name='Stan')),
            ],
            options={
                'verbose_name': 'Rezerwacja',
                'verbose_name_plural': 'Rezerwacje',
            },
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nazwa kina')),
                ('city', models.CharField(max_length=60, verbose_name='Miasto')),
                ('address', models.CharField(max_length=100, verbose_name='Adres')),
                ('postal_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Wprowadż poprawny kod pocztowy', regex='\\d{2}-\\d{3}')], verbose_name='Kod pocztowy')),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Wprowadź poprawny numer telefonu (może zawierać spacje).', regex='(\\d{2} ?\\d{3}(?: ?\\d{2}){2})|(\\d{3}(?: \\d{3}){2})')], verbose_name='Numer telefonu')),
            ],
            options={
                'verbose_name': 'Kino',
                'verbose_name_plural': 'Kina',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Tytuł')),
                ('releaseDate', models.DateField(verbose_name='Data wydania')),
                ('length', models.IntegerField(verbose_name='Długość')),
                ('producer', models.TextField(verbose_name='Producent')),
                ('description', models.TextField(blank=True, null=True, unique=True, verbose_name='Opis')),
                ('cover', models.ImageField(max_length=200, unique=True, upload_to='', verbose_name='Okładka')),
            ],
            options={
                'verbose_name': 'Film',
                'verbose_name_plural': 'Filmy',
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(choices=[('gat1', 'gatunek pierwszy'), ('gat2', 'gatunek drugi'), ('wiz', "you're a wizard, Harry"), ('lotr', 'you shall not pass'), ('hor', 'sikasz ze strachu'), ('kom', 'sikasz ze smiechu'), ('gat', 'ostatni egzemplarz gatunków'), ('ext', 'extinction')], max_length=20, verbose_name='Gatunek')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Movie', verbose_name='Film')),
            ],
            options={
                'verbose_name': 'Gatunek',
                'verbose_name_plural': 'Gatunki',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2, verbose_name='Nazwa')),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Cinema', verbose_name='Kino')),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Sale',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.SmallIntegerField(verbose_name='Rząd w reprezentacji do wyświetlania')),
                ('column', models.SmallIntegerField(verbose_name='Kolumna w reprezentacji do wyświetlania')),
                ('realRow', models.SmallIntegerField(verbose_name='Numer rzędu')),
                ('realColumn', models.CharField(max_length=2, verbose_name='Numer kolumny')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Room', verbose_name='Sala')),
            ],
            options={
                'verbose_name': 'Miejsce',
                'verbose_name_plural': 'Miejsca',
            },
        ),
        migrations.CreateModel(
            name='Showing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data')),
                ('hour', models.TimeField(verbose_name='Godzina')),
                ('audioType', models.CharField(choices=[('one', 'quiet'), ('two', 'loud'), ('thr', 'hard-bass'), ('czt', 'louder'), ('piat', 'LOUDER!!!!!1!1!!111!!1!!!1111'), ('inf', 'the branch from "We Are Number One"')], max_length=10, verbose_name='Jakość dźwięku')),
                ('pictureType', models.CharField(choices=[('no', 'black & white with gaussian distortion'), ('nn', 'black & white with less gaussian distortion'), ('bw', 'black & white'), ('go', 'colorful and dim'), ('gd', 'colorful in hd'), ('d3', 'colorful in 3D')], max_length=2, verbose_name='Jakość obrazu')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Movie', verbose_name='Film')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Room', verbose_name='Sala')),
            ],
            options={
                'verbose_name': 'Seans',
                'verbose_name_plural': 'Seanse',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Booking', verbose_name='Rezerwacja')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Seat', verbose_name='Miejsce')),
            ],
            options={
                'verbose_name': 'Bilet',
                'verbose_name_plural': 'Bilety',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('typo', models.CharField(db_column='type', max_length=20, primary_key=True, serialize=False, verbose_name='Typ biletu')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Cena')),
                ('description', models.TextField(max_length=200, unique=True, verbose_name='Opis')),
            ],
            options={
                'verbose_name': 'Typ biletu',
                'verbose_name_plural': 'Typy biletów',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Wprowadź poprawny numer telefonu (może zawierać spacje).', regex='(\\d{2} ?\\d{3}(?: ?\\d{2}){2})|(\\d{3}(?: \\d{3}){2})')], verbose_name='Numer telefonu')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil użytkownika',
                'verbose_name_plural': 'Profile użytkownika',
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='typo',
            field=models.ForeignKey(db_column='type', on_delete=django.db.models.deletion.CASCADE, to='cinema.TicketType', verbose_name='Typ biletu'),
        ),
        migrations.AlterUniqueTogether(
            name='movie',
            unique_together={('title', 'releaseDate')},
        ),
        migrations.AddField(
            model_name='booking',
            name='showing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.Showing', verbose_name='Seans'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Profil użytkownika'),
        ),
        migrations.AlterUniqueTogether(
            name='ticket',
            unique_together={('booking', 'seat')},
        ),
        migrations.AlterUniqueTogether(
            name='showing',
            unique_together={('room', 'hour', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='seat',
            unique_together={('room', 'row', 'column', 'realRow', 'realColumn')},
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('name', 'cinema')},
        ),
    ]
